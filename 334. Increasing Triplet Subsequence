class Solution 
{
    public boolean increasingTriplet(int[] nums) 
    {
        int i = 2147483647; // 2^31 - 1
        int j = 2147483647; // 2^31 - 1
        int k = 2147483647; // 2^31 - 1
        int numsArrayLength = nums.length;
        if (numsArrayLength < 3)
        {
            return false;
        }
        // for (int i = 0; i < numsArrayLength; i++)
        // {
        //     iIndex = i;
        //     for (int j = i + 1; j < numsArrayLength; j++)
        //     {
        //         if (nums[j] > nums[iIndex])
        //         {
        //             jIndex = j;
        //             for (int k = j + 1; k < numsArrayLength; k++)
        //             {
        //                 if (nums[k] > nums[jIndex])
        //                 {
        //                     kIndex = k;
        //                     if (nums[iIndex] < nums[jIndex] && nums[jIndex] < nums[kIndex])
        //                     {
        //                         return true;
        //                     }
        //                 }
        //             }
        //         }
        //     }
        // }
        // [2, 4, 1, 6, 0] i2, j4, i1, 
        for (int index = 0; index < numsArrayLength; index++)
        {
            if (nums[index] <= i)
            {
                // System.out.println("i" + nums[index]);
                i = nums[index];
            }
            else if (nums[index] > i && nums[index] <= j)
            {
                // System.out.println("j" + nums[index]);
                j = nums[index];
            }
            else if (nums[index] > i && nums[index] > j)
            {
                // System.out.println("k" + nums[index]);
                return true;
            }
        }
        return false;
    }
}
