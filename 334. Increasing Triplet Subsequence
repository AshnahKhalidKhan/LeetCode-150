class Solution 
{
    public boolean increasingTriplet(int[] nums) 
    {
        int iIndex = -1;
        int jIndex = -1;
        int kIndex = -1;
        int numsArrayLength = nums.length;
        if (numsArrayLength < 3)
        {
            return false;
        }
        /*
        What if I hash this?
        nums = [2,1,5,0,4,6]
        0 = 3
        1 = 1
        2 = 0
        4 = 5
        5 = 2
        6 = 6
        Oh wait, I can't. O(1) space complexity needed.
        */
        for (int i = 0; i < numsArrayLength; i++)
        {
            iIndex = i;
            for (int j = i + 1; j < numsArrayLength; j++)
            {
                if (nums[j] > nums[iIndex])
                {
                    jIndex = j;
                    for (int k = j + 1; k < numsArrayLength; k++)
                    {
                        if (nums[k] > nums[jIndex])
                        {
                            kIndex = k;
                            if (nums[iIndex] < nums[jIndex] && nums[jIndex] < nums[kIndex])
                            {
                                return true;
                            }
                        }
                    }
                }
            }
        }
        return false;
    }
}
