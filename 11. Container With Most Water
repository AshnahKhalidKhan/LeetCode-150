class Solution 
{
    public int maxArea(int[] height) 
    {
        //NOTE-TO-SELF: Array size will always be 2 or more.
        int totalLines = height.length;
        int leftLine = 0;
        int rightLine = totalLines - 1;
        int maximumArea = 0;
        int currentArea = 0;
        for (int line = 0; line < totalLines; line++)
        {
            if (leftLine > rightLine)
            {
                break;
            }
            if (height[leftLine] < height[rightLine])
            {
                currentArea = (rightLine - leftLine) * height[leftLine];
                if (currentArea > maximumArea)
                {
                    maximumArea = currentArea;
                }
                leftLine++;
            }
            else if (height[rightLine] < height[leftLine])
            {
                currentArea = (rightLine - leftLine) * height[rightLine];
                if (currentArea > maximumArea)
                {
                    maximumArea = currentArea;
                }
                rightLine--;
            }
            else //if (height[leftLine] == height[rightLine])
            {
                currentArea = (rightLine - leftLine) * height[leftLine];
                if (currentArea > maximumArea)
                {
                    maximumArea = currentArea;
                }
                leftLine++;
                rightLine--;
            }
        }
        return maximumArea;
    }
}
